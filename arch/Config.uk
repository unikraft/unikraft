choice
	prompt "Architecture"
	default ARCH_ARM_32 if HOST_ARCH = "arm"
	default ARCH_ARM_64 if HOST_ARCH = "arm64"
	default ARCH_X86_64
	help
	  Select the target CPU architecture.

config ARCH_X86_64
	bool "x86 compatible (64 bits)"
	select LIBISRLIB
config ARCH_ARM_64
	bool "Armv8 compatible (64 bits)"
	select LIBISRLIB
config ARCH_ARM_32
	bool "Armv7 compatible (32 bits)"
	select LIBISRLIB

endchoice

if (ARCH_X86_64)
	source "$(UK_BASE)/arch/x86/x86_64/Config.uk"
endif
if (ARCH_ARM_32)
	source "$(UK_BASE)/arch/arm/arm/Config.uk"
endif
if (ARCH_ARM_64)
	source "$(UK_BASE)/arch/arm/arm64/Config.uk"
endif

config STACK_SIZE_PAGE_ORDER
	int
	prompt "Stack size page order"
	default 4
	help
		Indirectly configures the stack size by changing the stack size page
		order. Stack size is equal with 2^order * page size (e.g. 4KB).
		Only change this if you know what you're doing.

config CPU_EXCEPT_STACK_SIZE_PAGE_ORDER
	int
	prompt "Stack size page order CPU exceptions (traps and IRQs)"
	default 4
	help
		Indirectly configures the CPU exception stack size by changing
		the stack size page order. Stack size is equal with
		2 ^ order * page size (e.g. 4KB).
		Only change this if you know what you're doing.

config AUXSTACK_SIZE_PAGE_ORDER
	int
	prompt "Auxiliary stack size page order"
	default 4
	help
		Indirectly configures the auxiliary stack size by changing the
		stack size page order. Stack size is equal with 2 ^ order * page
		size (e.g. 4KB). Only change this if you know what you're doing.

config HAVE_MEMTAG
	bool
	help
	  Memory tagging support.
