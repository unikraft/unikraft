ifeq (x86_64,$(CONFIG_UK_ARCH))
KVM_LDFLAGS-y += -Wl,-m,elf_x86_64
else ifeq (arm64,$(CONFIG_UK_ARCH))
KVM_LDFLAGS-y	 += -Wl,-m,aarch64elf
KVM_LINK_LIBGCC_FLAG	:= -lgcc
endif


##
## Link image
##
KVM_IMAGE := $(BUILD_DIR)/$(CONFIG_UK_NAME)_kvm-$(CONFIG_UK_ARCH)
KVM_DEBUG_IMAGE := $(KVM_IMAGE).dbg
KVM_IMAGE_OBJECT := $(KVM_IMAGE).o
KVM_ALIB_IMAGE := $(KVM_IMAGE).a
KVM_ALIB_DEF_LDS := $(KVM_IMAGE).def.lds
KVM_ALIB_LDS := $(KVM_IMAGE).lds

KVM_LD_SCRIPT_FLAGS := $(addprefix -Wl$(comma)-dT$(comma),\
			 $(UK_PLAT_KVM_DEF_LDS))
KVM_LD_SCRIPT_FLAGS += $(addprefix -Wl$(comma)-T$(comma),\
			$(KVM_LD_SCRIPT-y) $(EXTRA_LD_SCRIPT-y))

$(KVM_IMAGE_OBJECT): $(KVM_ALIBS) $(KVM_ALIBS-y) $(KVM_OLIBS) $(KVM_OLIBS-y) \
		    $(UK_ALIBS) $(UK_ALIBS-y) $(UK_OLIBS) $(UK_OLIBS-y)
	$(call build_cmd,LD,,$(KVM_IMAGE).ld.o,\
	       $(LD) -r $(LIBLDFLAGS) $(LIBLDFLAGS-y) \
			$(KVM_LDFLAGS) $(KVM_LDFLAGS-y) \
			$(KVM_OLIBS) $(KVM_OLIBS-y) \
			$(UK_OLIBS) $(UK_OLIBS-y) \
			-Wl$(comma)--start-group \
			$(KVM_ALIBS) $(KVM_ALIBS-y) \
			$(UK_ALIBS) $(UK_ALIBS-y) \
			$(KVM_LINK_LIBGCC_FLAG) \
			-Wl$(comma)--end-group \
			-o $(KVM_IMAGE).ld.o)
	$(call build_cmd,OBJCOPY,,$@,\
		$(OBJCOPY) -w -G kvmos_* -G _libkvmplat_entry \
			$(KVM_IMAGE).ld.o $@)

$(KVM_DEBUG_IMAGE): $(KVM_IMAGE_OBJECT)
	$(call build_cmd,LD,,$@,\
	       $(LD) $(LDFLAGS) $(LDFLAGS-y) \
		     $(KVM_LDFLAGS) $(KVM_LDFLAGS-y) \
		     $(KVM_LD_SCRIPT_FLAGS) \
		     $(KVM_IMAGE_OBJECT) -o $@)

$(KVM_IMAGE): $(KVM_DEBUG_IMAGE)
	$(call build_cmd,SCSTRIP,,$@,\
		$(SCRIPTS_DIR)/sect-strip.py \
			$(SECT_STRIP_FLAGS) $(SECT_STRIP_FLAGS-y) \
			--with-objcopy=$(OBJCOPY) \
			$< -o $@ && \
		$(STRIP) -s $@)

$(KVM_IMAGE).sym: $(KVM_DEBUG_IMAGE)
	$(call build_cmd,NM,,$@, $(NM) -n $< > $@)

$(KVM_IMAGE).gz: $(KVM_IMAGE)
	$(call build_cmd,GZ,,$@, $(GZIP) -f -9 -c $< >$@)

$(KVM_ALIB_DEF_LDS):
	$(call build_cmd,CP,,$@,\
			$(CP) $(UK_PLAT_KVM_DEF_LDS) $@)

$(KVM_ALIB_LDS):
	$(call build_cmd,CAT,,$@,\
			$(CAT) $(KVM_LD_SCRIPT-y) $(EXTRA_LD_SCRIPT-y) > $@)

$(KVM_ALIB_IMAGE): $(KVM_IMAGE_OBJECT) $(KVM_ALIB_LDS) $(KVM_ALIB_DEF_LDS)
	$(call build_cmd,AR,,$@,\
	       $(AR) $(ARFLAGS) $@ $<)

# register images to the build
ifeq ($(CONFIG_PLAT_KVM),y)
UK_DEBUG_IMAGES-y                     += $(KVM_DEBUG_IMAGE)
UK_IMAGES-y                           += $(KVM_IMAGE)
UK_IMAGES-$(CONFIG_OPTIMIZE_SYMFILE)  += $(KVM_IMAGE).sym
UK_IMAGES-$(CONFIG_OPTIMIZE_COMPRESS) += $(KVM_IMAGE).gz
UK_ALIB_IMAGES-y                      += $(KVM_ALIB_IMAGE)
endif

# ...for cleaning:
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE_OBJECT))
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_IMAGE).ld.o)
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_ALIB_DEF_LDS))
LIBKVMPLAT_CLEAN += $(call build_clean,$(KVM_ALIB_LDS))
