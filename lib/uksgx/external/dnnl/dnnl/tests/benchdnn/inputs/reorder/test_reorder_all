#
# f32 <-> s32 <-> s8 <-> u8
#
--sdt=f32,s32,s8,u8
--ddt=f32,s32,s8,u8

--attr=oscale=per_dim_1:0.
--stag=nchw,nhwc,nChw4c,nChw8c,nChw16c
--dtag=nchw,nhwc,nChw8c,nChw16c
2x64x3x3

--attr=oscale=per_dim_0:0.
--stag=oihw,hwio
--dtag=oihw,hwio
2x64x3x3

--attr=oscale=per_dim_01:0.
--stag=goihw,gOIhw16i16o
--dtag=goihw,gOIhw16i16o
3x32x32x2x2

--stag=nChw4c,nChw8c --dtag=nChw16c 2x40x3x3   # blocked with tail
--stag=nChw16c --dtag=nChw8c  2x40x3x3         # blocked with tail

--attr=oscale=common:0.
--stag=ncw,nwc
--dtag=ncw,nwc
2x8x8 # special 8x8 kernel

--stag=nchw,nhwc,nChw4c,nChw8c,nChw16c
--dtag=nchw,nhwc,nChw4c,nChw8c,nChw16c
2x64x3x3

--stag=oihw,hwio
--dtag=oihw,hwio
2x64x3x3

# simple nChw{8,16}c impl
--stag=nChw4c,nChw8c --dtag=nChw16c 2x71x16x16 2x72x16x16 2x73x16x16
--stag=nChw16c --dtag=nChw8c  2x71x16x16 2x72x16x16 2x73x16x16

#
# s8, f32 -> s8 w/ compensations
#
--reset
--alg=bootstrap
--sdt=f32,s8
--ddt=s8

--stag=hwio --dtag=hwio,OIhw4i16o4i
32x32x3x3
--oflag=conv_s8s8 32x32x3x3

--stag=hwigo --oflag=gconv_s8s8
--dtag=hwigo 2x32x32x3x3
--dtag=gOIhw4i16o4i 2x32x32x3x3
--dtag=gOIhw4o4i 2x36x36x3x3
--dtag=gOIhw2i8o4i 2x40x40x3x3
--dtag=Goihw16g 512x1x1x3x3

# f16
--reset
--sdt=f32 --ddt=f16
--attr=oscale=per_dim_1:0.5
--stag=abcd,cdba
--dtag=abcd,cdba
3x5x7x11

--sdt=f16 --ddt=f32
--attr=oscale=per_dim_1:0.5
--stag=abcd,cdba
--dtag=abcd,cdba
3x5x7x11

--batch=test_reorder_bfloat16
