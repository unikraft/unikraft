# Small tests
# f32
--reset

# RNN
--alg=VANILLA_RNN
--direction=left2right,right2left,concat,sum
--activation=RELU,TANH,LOGISTIC
--prop=FWD_D,BWD_DW --batch=rnn_small

# LSTM
--direction=left2right
--activation=TANH
--prop=FWD_D,BWD_DW
--alg=VANILLA_LSTM --batch=rnn_small

# f16
--cfg=f16
--prop=FWD_D
--direction=left2right

# RNN
--alg=VANILLA_RNN  --activation=RELU,TANH,LOGISTIC --batch=rnn_small
--alg=VANILLA_LSTM --activation=TANH               --batch=rnn_small

# LSTM int8
--alg=VANILLA_LSTM
--direction=left2right
--activation=TANH
--allow-unimpl=true
--prop=FWD_D

--cfg=u8u8u8f32,u8u8u8u8     --scaling=common --batch=rnn_small
--cfg=f32u8f32f32,f32u8f32u8 --scaling=per_oc --batch=rnn_small

# Large tests
--reset

# f32 tests
--cfg=f32
--prop=FWD_D,BWD_DW
--mb=50
--batch=test_rnn_large
--batch=test_lstm_large

--prop=FWD_D
--mb=1
--batch=test_rnn_large
--batch=test_lstm_large

# f16 tests
--cfg=f16
--prop=FWD_D
--skip-nonlinear=false
--mb=50
--alg=VANILLA_RNN
--activation=RELU
--batch=rnn_ds2
--direction=left2right,right2left,concat,sum
--batch=rnn_large
--batch=rnn_large_nonuniform
--alg=VANILLA_LSTM
--batch=rnn_gnmt_encoder
--batch=rnn_gnmt_decoder

# int8 (only LSTM)
--reset
--cfg=u8u8u8u8
--scaling=common,per_oc
--prop=FWD_D
--alg=VANILLA_LSTM

--skip-nonlinear=true
--mb=50
--batch=test_lstm_large
--mb=1
--batch=test_lstm_large
